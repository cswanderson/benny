{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 9,
			"minor" : 0,
			"revision" : 7,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"classnamespace" : "dsp.gen",
		"rect" : [ 134.0, 134.0, 1061.0, 595.0 ],
		"gridsize" : [ 15.0, 15.0 ],
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-3",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 614.0, 573.0, 35.0, 22.0 ],
					"text" : "out 2"
				}

			}
, 			{
				"box" : 				{
					"code" : "require \"sm_sallenkey_functions\";\r\nBuffer prm(\"voice_parameter_buffer\");\r\nBuffer changed_flags(\"changed_flags\");\r\nParam voice_is(0);\r\nParam voice_offset(0);\r\n\r\nHistory counter(0);\r\nHistory outsign(1);\r\nHistory outlevel(0);\r\nHistory waitflag(0);\r\nHistory filterfreq(440);\r\nHistory upda(0);\r\n\r\nHistory div,mod,mix,off,drv,spk;\r\n\r\nif(upda<=0){\r\n\tupda=vectorsize+25;\r\n\tif(peek(changed_flags,voice_is,0)>0){\r\n\t\tchanged_flags.poke(0,voice_is);\r\n\t\tdiv = peek(prm,voice_offset, 0, channels=1);\r\n\t\tmod = peek(prm,1+voice_offset, 0, channels=1);\r\n\t\tmix = peek(prm,2+voice_offset, 0, channels=1);\r\n\t\toff = peek(prm,3+voice_offset, 0, channels=1);\r\n\t\tdrv = peek(prm,4+voice_offset, 0, channels=1);\r\n\t\tspk = peek(prm,5+voice_offset, 0, channels=1);\r\n\t\tspk = -1.001001001001001001001001001001*(pow(0.001, spk) - 1);\r\n\t}\r\n}\r\nupda-=1;\r\n\r\noutlevel*=spk;\r\nif(mod<0.5){\r\n\tcounter += ((delta(in1 > 0))!=0);\r\n\tif(counter >= div*16) {\r\n\t\tfilterfreq = 440 / (1 + (div*16));\r\n\t\tcounter = 0;\r\n\t\toutsign *= -1;\r\n\t\toutlevel = outsign;\r\n\t}\r\n}else{\r\n\tt = (delta(in1 > 0));\r\n\tfilterfreq = mtof((div+in2)*128);\r\n\tif((waitflag<=0) && (t!=0)){\r\n\t\twaitflag = samplerate/filterfreq;\r\n\t\toutsign *= -1;\r\n\t\toutlevel = outsign;\t\t\r\n\t}\r\n\tif(waitflag>0) waitflag-=1;\r\n}\r\n\r\nx = outlevel;\r\n\r\ncut = clip(filterfreq*pow(2,(off-0.5)*8), 1, 20000);\r\nflp,fbp,fhp = skfTanNltoCoefMulti(x,cut,clip(drv/1.1,0,0.99),0.9);\r\n//flp=dcblock(flp);\r\n//fbp=dcblock(fbp);\r\n\r\nx = mix * fhp + (1-mix)*flp;\r\n\r\nout1 = x;\r\nout2 = outlevel;",
					"fontface" : 0,
					"fontname" : "<Monospaced>",
					"fontsize" : 12.0,
					"id" : "obj-5",
					"maxclass" : "codebox",
					"numinlets" : 2,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 50.0, 46.0, 583.0, 512.0 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-1",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 50.0, 14.0, 28.0, 22.0 ],
					"text" : "in 1"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 614.0, 14.0, 28.0, 22.0 ],
					"text" : "in 2"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 46.5, 573.0, 35.0, 22.0 ],
					"text" : "out 1"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 0 ],
					"source" : [ "obj-1", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 1 ],
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 0 ],
					"source" : [ "obj-5", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"source" : [ "obj-5", 0 ]
				}

			}
 ]
	}

}
