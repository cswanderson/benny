{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 9,
			"minor" : 0,
			"revision" : 7,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"classnamespace" : "dsp.gen",
		"rect" : [ 241.0, 151.0, 1061.0, 595.0 ],
		"gridsize" : [ 15.0, 15.0 ],
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-5",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 611.0, 14.0, 28.0, 22.0 ],
					"text" : "in 3"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-7",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 515.0, 662.0, 35.0, 22.0 ],
					"text" : "out 2"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-1",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 50.0, 14.0, 28.0, 22.0 ],
					"text" : "in 1"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 515.0, 14.0, 28.0, 22.0 ],
					"text" : "in 2"
				}

			}
, 			{
				"box" : 				{
					"code" : "require \"osc_functions\";\r\nBuffer shape(\"osc_shape_lookup\");\r\nBuffer mtof_lookup(\"mtof_lookup\");\r\nBuffer prm(\"voice_parameter_buffer\");\r\nBuffer detuning(\"detuning\");\r\nBuffer changed_flags(\"changed_flags\");\r\n\r\nHistory cursor_s1(0),cursor_s2(0),cursor_p1(0),cursor_p2(0);\r\nHistory ws1,ws2,s_unstab,p_unstab,range1,range2,detune1,detune2,porta1,porta2,cr1,cr2,sr1,sr2,sha1,sha_off1(0),sha2,sha_off2(0),mgain1,mgain2,again1,again2,fm1,am1,fm2,am2,sm1,sm2;\r\nHistory osc1,osc2,upda(0);\r\n\r\nParam voice_is(0, min=0,default=0,max=4096);\r\nParam voice_offset(0);\r\nParam p(0,min=0,default=64,max=128);\r\nParam v(0,min=0,default=0,max=1000);\r\n\r\nupda+=1;\r\nif(upda>vectorsize){\r\n\tupda = -voice_is;\r\n\tif(peek(changed_flags,voice_is,0)>0){\r\n\t\tchanged_flags.poke(0,voice_is);\r\n\t\tws1 = peek(prm,voice_offset, 0,channels=1);\r\n\t\trange1 = 12*floor((peek(prm,1+ voice_offset,0, channels=1)*18 - 16));\r\n\t\tdetune1 = 48*(peek(prm,2+ voice_offset,0, channels=1)-0.5);\r\n\t\tporta1 = 100*peek(prm,3+voice_offset,0, channels=1);\r\n\t\tporta1 = porta1*porta1;\r\n\t\tporta1 = mstosamps(porta1);\r\n\t\tfm1 = 2*(peek(prm,4+voice_offset,0, channels=1)-0.5);\r\n\t\tfm1 = abs(fm1)*fm1*10;\r\n\t\tam1 = 2*(peek(prm,5+voice_offset,0, channels=1)-0.5);\r\n\t\tam1 = abs(am1)*am1;\r\n\t\tsm1 = 2*(peek(prm,6+voice_offset,0, channels=1)-0.5);\r\n\t\tsm1 = abs(sm1)*sm1;\r\n\r\n\t\tws2 = peek(prm,7+voice_offset, 0,channels=1);\r\n\t\trange2 = 12*floor((peek(prm,8+ voice_offset,0, channels=1)*18 - 16));\r\n\t\tdetune2 = 48*(peek(prm,9+ voice_offset,0, channels=1)-0.5);\r\n\t\tporta2 = 100*peek(prm,10+voice_offset,0, channels=1);\r\n\t\tporta2 = porta2*porta2;\r\n\t\tporta2 = mstosamps(porta2);\r\n\t\tfm2 = 2*(peek(prm,11+voice_offset,0, channels=1)-0.5);\r\n\t\tfm2 = abs(fm2)*fm2*10;\r\n\t\tam2 = 2*(peek(prm,12+voice_offset,0, channels=1)-0.5);\r\n\t\tam2 = abs(am2)*am2;\r\n\t\tsm2 = 2*(peek(prm,13+voice_offset,0, channels=1)-0.5);\r\n\t\tsm2 = abs(sm2)*sm2;\r\n\r\n\t\tp_unstab = peek(prm,14+ voice_offset, 0,channels=1);\r\n\t\tp_unstab *= p_unstab*p_unstab*20;\r\n\t\tcr1 = 0.000001*p_unstab/(voice_is*5180+1000);\r\n\t\tcr2 = 0.000001*p_unstab/(voice_is*4690+1200);\r\n\t\r\n\t\ts_unstab = peek(prm,15+ voice_offset,0, channels=1);\r\n\t\ts_unstab *= s_unstab*8;\r\n\t\tsr1 = s_unstab/(voice_offset*3260+4200);\r\n\t\tsr2 = s_unstab/(voice_offset*4320+3200);\r\n\t\r\n\t\tmgain1 = peek(prm,16+voice_offset,0, channels=1);\r\n\t\tmgain2 = peek(prm,17+voice_offset,0, channels=1);\r\n\t\tagain1 = peek(prm,18+voice_offset,0, channels=1);\r\n\t\tagain2 = peek(prm,19+voice_offset,0, channels=1);\r\n\t}\r\n}\r\n//haven't yet implemented AM or SM\r\n\r\ncursor_p1 += cr1;\r\ncursor_s1 += sr1;\r\ncursor_p1 = wrap(cursor_p1);\r\ncursor_s1 = wrap(cursor_s1);\r\n\r\ncursor_p2 += cr2;\r\ncursor_s2 += sr2;\r\ncursor_p2 = wrap(cursor_p2);\r\ncursor_s2 = wrap(cursor_s2);\r\n\r\npink_s1 = sample(detuning,cursor_s1,0);\r\npink_p1 = sample(detuning,cursor_p1,0);\r\npink_s2 = sample(detuning,cursor_s2,0);\r\npink_p2 = sample(detuning,cursor_p2,0);\r\n\r\nsh1 = ws1 + s_unstab*pink_s1;\r\nsh2 = ws2 + s_unstab*pink_s2;\r\n\r\nsdif = sh1+sha_off1 - sha1;\r\nif(sdif>0.5) sha_off1-=1;\r\nif(sdif<-0.5) sha_off1+=1;\r\nsha1 = sm1*osc2 + slide(sh1 + sha_off1,5000,5000);\r\nsin_l1, tri_l1, rec_l1, pw1 = sample(shape, wrap(sha1) , 0, channels=4);\r\n\r\nsdif = sh2+sha_off2 - sha2;\r\nif(sdif>0.5) sha_off2-=1;\r\nif(sdif<-0.5) sha_off2+=1;\r\nsha2 = sm2*osc1 + slide(sh2 + sha_off2,5000,5000);\r\nsin_l2, tri_l2, rec_l2, pw2 = sample(shape, wrap(sha2) , 0, channels=4);\r\n\r\npitch = slide(p,porta1,porta1) + (slide(p_unstab,100,100)*pink_p1)+range1+(slide(detune1,100,100));\r\ntra=1;\r\nif(pitch<0){\r\n\ttra = floor(-pitch/12)+1;\r\n\tpitch += 12*tra;\r\n\ttra = pow(2, -tra);\r\n}else{\r\n\tif(pitch>128) pitch=128;\r\n}\r\npit1 = tra*peek(mtof_lookup,pitch, (voice_is % 8), channels=1, interp = \"linear\");\r\n\r\npitch = slide(p,porta2,porta2) + (slide(p_unstab,100,100)*pink_p2)+range2+(slide(detune2,100,100));\r\ntra=1;\r\nif(pitch<0){\r\n\ttra = floor(-pitch/12)+1;\r\n\tpitch += 12*tra;\r\n\ttra = pow(2, -tra);\r\n}else{\r\n\tif(pitch>128) pitch=128;\r\n}\r\npit2 = tra*peek(mtof_lookup,pitch, (voice_is % 8), channels=1, interp = \"linear\");\r\n\r\ndelt = (delta(in3!=0)>0);\r\nrec1 =  eptr_rect2(pit1,in1+fm1*osc2,pw1, delt);\r\nsinph1 = phasor(pit1*(1+in1+fm1*osc2),delt);\r\nsaw1 =  integrator_saw(rec1, pit1*(1+in1+fm1*osc2), pw1, delt);\r\nosc1 =  sin_l1 * cycle(sinph1+0.75,index = \"phase\");\r\nosc1 += tri_l1 * saw1 + rec_l1 * rec1;\r\nosc1 *= (1-am1+am1*osc2);\r\n\r\nrec2 =  eptr_rect2(pit2,in2+fm2*osc1,pw2, delt);\r\nsinph2 = phasor(pit2*(1+in2+fm2*osc1),delt);\r\n/*rec=0; sinph=0;\r\ndelt = 0;\r\n/*if(fmmode<0.33){\r\n\tdelt = (delta(in3!=0)>0);\r\n\trec =  eptr_rect2(pit,in1,pw, delt);\r\n\tsinph = phasor(pit*(1+in1),delt);\r\n}else if(fmmode<0.66){\r\n\tdelt = (delta(in1!=0)>0) || (delta(in3!=0)>0);\r\n\trec =  eptr_rect(pit,delt,pw, sync=1);\r\n\tsinph = phasor(pit,delt);\r\n}else { \r\n\tdelt = (delta(in1!=0)>0) || (delta(in3!=0)>0);\r\n\trec =  eptr_rect(pit,in1,pw, sync=2);\r\n\tsinph = phasor(pit*(1+in1),delt);\r\n}*/\r\nsaw2 =  integrator_saw(rec2, pit2*(1+in2+fm2*osc1), pw2, delt);\r\nosc2 =  sin_l2 * cycle(sinph2+0.75,index = \"phase\");\r\nosc2 += tri_l2 * saw2 + rec_l2 * rec2;\r\nosc2 *= (1-am2+am2*osc1);\r\n\r\nout1 = osc1 * slide(mgain1,1000,1000) + osc2 * slide(mgain2,1000,1000);\r\nout2 = osc1 * slide(again1,1000,1000) + osc2 * slide(again2,1000,1000);",
					"fontface" : 0,
					"fontname" : "<Monospaced>",
					"fontsize" : 12.0,
					"id" : "obj-3",
					"maxclass" : "codebox",
					"numinlets" : 3,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 50.0, 44.0, 738.0, 598.0 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 50.0, 662.0, 35.0, 22.0 ],
					"text" : "out 1"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 0 ],
					"source" : [ "obj-1", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 1 ],
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"source" : [ "obj-3", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-7", 0 ],
					"source" : [ "obj-3", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 2 ],
					"source" : [ "obj-5", 0 ]
				}

			}
 ]
	}

}
