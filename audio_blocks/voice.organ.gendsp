{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 9,
			"minor" : 0,
			"revision" : 7,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"classnamespace" : "dsp.gen",
		"rect" : [ 334.0, 102.0, 734.0, 540.0 ],
		"gridsize" : [ 15.0, 15.0 ],
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-7",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 515.0, 512.0, 35.0, 22.0 ],
					"text" : "out 2"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-1",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 50.0, 14.0, 28.0, 22.0 ],
					"text" : "in 1"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 515.0, 14.0, 28.0, 22.0 ],
					"text" : "in 2"
				}

			}
, 			{
				"box" : 				{
					"code" : "onepole(input){\r\n\tHistory y0(0);\r\n\r\n\tParam cutoff(1000, max=20000, min=1);\r\n\r\n\tcoeff_a = clip(sin(abs(cutoff) * 2 * PI / samplerate), 0, 1);\r\n\tmix5 = mix(y0, input, coeff_a);\r\n\ty0 = fixdenorm(mix5);\r\n\treturn mix5;\r\n}\r\n\r\n//require \"filter_functions\";\r\nBuffer mtof_lookup(\"mtof_lookup\");\r\nBuffer prm(\"voice_parameter_buffer\");\r\nBuffer changed_flags(\"changed_flags\");\r\n//Buffer detuning(\"detuning\");\r\nData state(100);\r\nData bounce(5000);\r\n//in groups of 9:\r\n//0 - time offset\r\n//9 - position (0-1) and - for predelay\r\n//18 - rate\r\n//27 - level\r\n//36 - cubed\r\n//45 - inverse \r\n//54 - freq mult\r\nHistory f1,mgain(0.1),bouncetime(1);\r\nHistory ov(0);  //last non-zero velocity\r\nHistory oov(0); //just for detect change\r\nHistory otrig(0); //likewise\r\nHistory op(0); //old pitch\r\nHistory env(0);\r\nHistory upda(-11);\r\n\r\n\r\nParam voice_offset(0);\r\nParam voice_is(0);\r\nParam p(0,min=0,default=64,max=128);\r\nParam v(0,min=0,default=0,max=1000);\r\nParam panic(0);\r\nParam latch(0);\r\nParam cont(1);\r\n\r\n\r\nupda -= cont;\r\n\r\nif(upda<=0){\r\n\tif(upda<-10){\r\n\t\t//initialisation\r\n\t\tpoke(state,0.48,0,0); //store fixed initial start time offsets\r\n\t\tpoke(state,0.06,1,0);\r\n\t\tpoke(state,0.30,2,0);\r\n\t\tpoke(state,0.12,3,0);\r\n\t\tpoke(state,0.42,4,0);\r\n\t\tpoke(state,0.36,5,0);\r\n\t\tpoke(state,0.24,6,0);\r\n\t\tpoke(state,0.18,7,0);\r\n\t\tpoke(state,0,8,0);\r\n\t\tpoke(state,2,54,0); //and the frequencies of the partials\r\n\t\tpoke(state,3,55,0);\r\n\t\tpoke(state,4,56,0);\r\n\t\tpoke(state,8,57,0);\r\n\t\tpoke(state,12,58,0);\r\n\t\tpoke(state,16,59,0);\r\n\t\tpoke(state,20,60,0);\r\n\t\tpoke(state,24,61,0);\r\n\t\tpoke(state,32,62,0);\r\n\t\tpoke(state,0,27,0); //and levels to zero so they update\r\n\t\tpoke(state,0,28,0);\r\n\t\tpoke(state,0,29,0);\r\n\t\tpoke(state,0,30,0);\r\n\t\tpoke(state,0,31,0);\r\n\t\tpoke(state,0,32,0);\r\n\t\tpoke(state,0,33,0);\r\n\t\tpoke(state,0,34,0);\r\n\t\tpoke(state,0,35,0);\r\n\t\tfor(i=0;i<8;i+=1){  // this fills the bounce buffer with some random contact bounce patterns\r\n\t\t\tbl = abs(noise())*5+3;\r\n\t\t\tc = 0;\r\n\t\t\tbc = 0;\r\n\t\t\tbbl = abs(noise())*50+25;\r\n\t\t\tst = 1;\r\n\t\t\tfor(t=0;t<256;t+=1){\r\n\t\t\t\tbc+=1;\r\n\t\t\t\tif(bc>bbl){\r\n\t\t\t\t\tst = 0;//1-st;\r\n\t\t\t\t\tbbl *= 0.6+0.4*abs(noise());\r\n\t\t\t\t\tbc = -bbl;\r\n\t\t\t\t}\r\n\t\t\t\tif(bc>0){\r\n\t\t\t\t\tc+=1;\r\n\t\t\t\t\tif(c>bl){\r\n\t\t\t\t\t\tst = 1-st;\r\n\t\t\t\t\t\tbl = abs(noise())*5+3;\r\n\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tst = 0;\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tpoke(bounce,st,t+256*i,0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tupda = vectorsize;\r\n\tif(peek(changed_flags,voice_is,0)>0){\r\n\t\tchanged_flags.poke(0,voice_is);\r\n\t\tbouncetime = 0.1 + 3 *peek(prm,10+voice_offset,0);\r\n\t\tbouncetime = 0.001/(bouncetime*bouncetime);\r\n\t\tmg = 0.33*(4*peek(prm,9+voice_offset,0)-2);\r\n\t\tmgg = (mg==mgain);\r\n\t\tmgain = mg;\r\n \t\tfor(i=0;i<9;i+=1){\r\n\t\t\tl = peek(prm,voice_offset + i, 0);\r\n\t\t\tol = mgg * peek(state,i+27,0);\r\n\t\t\tif(l!=ol){\r\n\t\t\t\tpoke(state,l,i+27,0);\r\n\t\t\t\tl =  0.001+mgain*l;\r\n\t\t\t\tc = l*l*l;\r\n\t\t\t\tpoke(state,c,i+36,0);\r\n\t\t\t\tpoke(state,1/l,i+45,0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\npp = p+12*in1-24;\r\nif(pp!=op){\r\n\top = pp;\r\n\tif(op<0){\r\n\t\ttra = floor(-op/12)+1;\r\n\t\tf1 = sample(mtof_lookup,((op+0.5+12*tra)/128), 1, channels=1);\r\n\t\tf1 *= pow(2, -tra);\r\n\t}else{\t\r\n\t\tf1 = sample(mtof_lookup,((op+0.5)/128), 1, channels=1);\r\n\t}\r\n}\r\npha = phasor(f1);\r\n\r\nosc = 0;\r\nif(ov!=v){\r\n\tif((v == 0)&&(latch>2)) upda = 0;\r\n\tif((latch+(ov==0))>1) upda = 0;\r\n\tov = v;\r\n\tfor(i=0;i<9;i+=1){\r\n\t\toffs = peek(state, i, 0);\r\n\t\tif(v > offs){\r\n\t\t\tif(peek(state,9+i,0)<=0){\r\n\t\t\t\tr1 = (2+noise())*0.16*(1+v)+(noise()>(1.5-v))*v*noise();\r\n\t\t\t\tx1 = r1 * offs;\r\n\t\t\t\tr1 = bouncetime/r1;\r\n\t\t\t\tpoke(state,r1,18+i,0);\r\n\t\t\t\tpoke(state,-x1,9+i,0);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tpoke(state,-0.1-abs(noise()),18+i,0);\r\n\t\t}\r\n\t}\r\n}\r\nfor(i=0;i<9;i+=1){\r\n\tr1 = peek(state,18+i,0);\r\n\tx1 = peek(state,9+i,0);\r\n\tif(r1!=0){\r\n\t\tx1 += r1;\r\n\t\tpoke(state,x1,9+i,0);\r\n\t\tif(x1>=1){\r\n\t\t\tpoke(state,1,9+i,0);\r\n\t\t\tpoke(state,0,18+i,0);\r\n\t\t}else if((r1<0)&&(x1<0)){\r\n\t\t\tpoke(state,0,9+i,0);\r\n\t\t\tpoke(state,0,18+i,0);\r\n\t\t}\r\n\t}\r\n\tif((x1>0)&&(peek(bounce,256*x1 + 256 * ( (i+voice_is) % 8),0)>0)){\r\n\t\tph = pha * peek(state,54+i,0);\r\n\t\tph -= floor(ph);\r\n\t\ty = cycle(ph, index=\"phase\");\r\n\t\to1 = y * peek(state,36+i,0);\r\n\t\to1 = sin(o1)*peek(state,45+i,0);\r\n\t\tosc += o1;\r\n\t}\r\n}\r\n\r\nosc *= 1+in2;\r\nosc = clip(osc,-0.999,0.999);\r\nosc = asin(osc);\r\n\r\noscw = onepole(osc * 1.5, cutoff = 2000);\r\noscw = onepole(oscw, cutoff = 1000);\r\noscw = clip(oscw,-1.57,1.57);\r\nout1 = sin(oscw);\r\nout2 = osc;",
					"fontface" : 0,
					"fontname" : "<Monospaced>",
					"fontsize" : 12.0,
					"id" : "obj-3",
					"maxclass" : "codebox",
					"numinlets" : 2,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 50.0, 44.0, 667.0, 463.0 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 50.0, 512.0, 35.0, 22.0 ],
					"text" : "out 1"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 0 ],
					"source" : [ "obj-1", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 1 ],
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"source" : [ "obj-3", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-7", 0 ],
					"source" : [ "obj-3", 1 ]
				}

			}
 ]
	}

}
