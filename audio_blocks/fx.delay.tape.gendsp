{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 8,
			"minor" : 6,
			"revision" : 4,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"classnamespace" : "dsp.gen",
		"rect" : [ 134.0, 134.0, 1061.0, 595.0 ],
		"bglocked" : 0,
		"openinpresentation" : 0,
		"default_fontsize" : 12.0,
		"default_fontface" : 0,
		"default_fontname" : "Arial",
		"gridonopen" : 1,
		"gridsize" : [ 15.0, 15.0 ],
		"gridsnaponopen" : 1,
		"objectsnaponopen" : 1,
		"statusbarvisible" : 2,
		"toolbarvisible" : 1,
		"lefttoolbarpinned" : 0,
		"toptoolbarpinned" : 0,
		"righttoolbarpinned" : 0,
		"bottomtoolbarpinned" : 0,
		"toolbars_unpinned_last_save" : 0,
		"tallnewobj" : 0,
		"boxanimatetime" : 200,
		"enablehscroll" : 1,
		"enablevscroll" : 1,
		"devicewidth" : 0.0,
		"description" : "",
		"digest" : "",
		"tags" : "",
		"style" : "",
		"subpatcher_template" : "",
		"assistshowspatchername" : 0,
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-7",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 515.0, 422.0, 35.0, 22.0 ],
					"text" : "out 2"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-1",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 50.0, 14.0, 28.0, 22.0 ],
					"text" : "in 1"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 745.0, 5.0, 28.0, 22.0 ],
					"text" : "in 2"
				}

			}
, 			{
				"box" : 				{
					"code" : "require \"filter_functions\";\r\n\r\nDelay delayA(4800000);\r\n\r\nBuffer mtof_lookup(\"mtof_lookup\");\r\nBuffer prm(\"voice_parameter_buffer\");\r\nBuffer detuning(\"detuning\");\r\n\r\nHistory disorder_cursor(0);\r\nHistory cursor(0);\r\nHistory cur_rate(0);\r\nHistory ots(97);\r\nHistory dt(0);\r\nHistory filt_y0(0),filt_y1(0);\r\nHistory filt_clamp(0), filt_clamp2(0);\r\nHistory pervoice(1);\r\nHistory pink0(0);\r\nHistory slips(1);\r\nHistory sliptime(10000);\r\n\r\nHistory bend,gain,mmix,nmix,highpass,c_mod,n_mod,changestyle,slip,feedback,sigout1,otime,upda(0);\r\n\r\nParam voice_offset(0);\r\nParam p(0,min=0,default=64,max=128);\r\nParam v(0,min=0,default=0,max=1000);\r\nParam panic(0, min=0,default=0,max=1);\r\nParam time(0, min=0,default=320,max=99999999999999999);\r\n\r\nif(time!=otime){\r\n\tslips=1;\r\n\totime=time;\r\n}\r\n\r\nif(delta(panic)>0){\r\n\tslips=1;\r\n}\r\n\r\nif(upda<=0){\r\n\tupda = vectorsize+13;\r\n\ttconst =time*0.0000667;// * 0.000066; \r\n\ttconst = 1/sqrt(tconst);\r\n\tbend = peek(prm,1+voice_offset, 0, channels=1);\r\n\tgain = 2*peek(prm,2+voice_offset, 0, channels=1);\r\n\thighpass = peek(prm,3+voice_offset, 0, channels=1);\r\n\tcutoff = highpass*highpass*10000;\r\n\tfilt_clamp = clamp(sin(abs(cutoff*1.2) * 2 * PI / samplerate), 0, 1);\r\n\tfilt_clamp2 = clamp(sin(abs(cutoff*0.85) * 2 * PI / samplerate), 0, 1);\r\n\tc_mod = peek(prm,4+voice_offset, 0, channels=1);\r\n\tn_mod = peek(prm,5+voice_offset, 0, channels=1);\r\n\tc_mod *= tconst;\r\n\tc_mod *= c_mod;\r\n\tn_mod *= tconst;\r\n\tn_mod *= n_mod;\r\n\tslip = tconst * peek(prm,6+voice_offset, 0, channels=1);\r\n\tchangestyle = peek(prm,7+voice_offset, 0, channels=1);\r\n\tfeedback = 2*peek(prm,8+voice_offset, 0, channels=1);\r\n\tmmix = -1+2*peek(prm,9+voice_offset, 0, channels=1);\r\n\tnmix = 1- abs(mmix);\r\n\tmmix = clip(mmix*2,-1,1);\r\n\tnmix = clip(nmix*2,-1,1);\r\n\tpervoice = 1 + 0.2*sin(voice_offset);\r\n\tcur_rate =  0.0068*pervoice/samplerate;\r\n\r\n\tif(abs((0.4+noise())*10)< (slip*slip)){\r\n\t\tslips+=0.01*noise();\r\n\t\tsliptime = 1000* (2 + noise());\r\n\t}else{\r\n\t\tslips -= (slips-1)*0.000001;\r\n\t}\r\n}\r\nupda-=1;\r\n//get mod amt first\r\ntimemod = (1 + in2);\r\ntimemod *= 1 + slide((n_mod),10000,10000)*sample(detuning, disorder_cursor, channels = 1);\r\ntimemod *= 1 + slide((c_mod/8),10000,10000)*(cycle(0.95*pervoice)+cycle(6.17*pervoice)/3);\r\ndisorder_cursor += cur_rate*(n_mod);\r\ndisorder_cursor %= 1;\r\ntimemod *= slide(slips,sliptime,sliptime);\r\n\r\nts = bend * 2 *  time;\r\nif(ts!=cursor){\r\n\tif(changestyle<0.25){ //fixedrate\r\n\t\tif(ots!=ts){\r\n\t\t\tdt = (ts-cursor)/10000;\r\n\t\t\tots=ts;\r\n\t\t\t}\r\n\t\tcursor += dt;\r\n\t}else if(changestyle<0.5){//octave\r\n\t\tif(ts>cursor+1) dt = 0.5;//2;\r\n\t\tif(ts<cursor-1) dt = -0.5;\r\n\t\tcursor += slide(dt,50,50);\r\n\t}else if(changestyle<0.75){// octave with reverses\r\n\t\tif(ts>cursor+1) dt = 2;//2;\r\n\t\tif(ts<cursor-1) dt = -0.5;\r\n\t\tcursor += slide(dt,50,50);\r\n\t}else{//bend\r\n\t\tcursor = slide(ts, 10000, 10000);\r\n\t}\r\n\tif(abs(cursor-ts)<2) {\r\n\t\tcursor=ts;\r\n\t\tdt = 0;\r\n\t}\r\n\r\n}\r\n\r\nch_input = sin(clip(0.25*in1,-1.57,1.57));\r\nch_fb = 0.25*slide(feedback,10000,10000)*sigout1;\r\nch_fb = sin(clip(ch_fb,-1.57,1.57));\r\ndelayA.write(sin(4*asin(clip(ch_input+ch_fb,-1,1))));\r\n\r\n//delayA.write(in1+slide(feedback,10000,10000)*in3);\r\nsigout0 = delayA.read(cursor*timemod) * slide(gain,10000,10000);\r\nsigout1 = twopole_lp(sigout0, cutoff=15000, Q=0.3);\r\n//x = sigout1;\r\nif(highpass>0){\r\n\tsigout2 = mix(filt_y0, sigout1, filt_clamp);\r\n\tfilt_y0 = fixdenorm(sigout2);\r\n\tsigout3 = mix(filt_y1, sigout2, filt_clamp2);\r\n\tfilt_y1 = fixdenorm(sigout3);\r\n\tsigout1 -= sigout3;\r\n\t// i think this is a 2pole highpass - 2 onepoles in a row\r\n}\r\nch_w = sin(clip(0.5*slide(mmix,100,100)*sigout1,-1.57,1.57));\r\nch_d = sin(clip(0.5*slide(nmix,100,100)*in1,-1.57,1.57));\r\nout1 = 2*asin(clip(ch_w+ch_d,-1,1)); //slide(mmix,100,100)*sigout1 + slide(nmix,100,100)*in1;\r\nout2 = timemod-1;\r\n",
					"fontface" : 0,
					"fontname" : "<Monospaced>",
					"fontsize" : 12.0,
					"id" : "obj-3",
					"maxclass" : "codebox",
					"numinlets" : 2,
					"numoutlets" : 2,
					"outlettype" : [ "", "" ],
					"patching_rect" : [ 50.0, 44.0, 748.0, 371.0 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 50.0, 422.0, 35.0, 22.0 ],
					"text" : "out 1"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 0 ],
					"source" : [ "obj-1", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 1 ],
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"source" : [ "obj-3", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-7", 0 ],
					"source" : [ "obj-3", 1 ]
				}

			}
 ],
		"autosave" : 0
	}

}
